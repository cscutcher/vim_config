set encoding=utf-8 

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Pathogen
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off
call pathogen#infect()
call pathogen#helptags()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General Config
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Filetype detection, plugin and indention on
filetype plugin indent on

"Syntax highlighting on
syntax on
"Copy indent from previous line
set autoindent

"Case insensitive search by default
set ic

"Highlight search
set hls

"Tab width in spaces
set tabstop=4
"Number of spaces for each tab indent
set shiftwidth=4
"Use spaces instead of tabs in insert
set expandtab

"Enable spelling
set spl=en_gb spell

"Enable Mouse
set mouse=a

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key Mapping
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <silent><F3> :NEXTCOLOR<cr>
map <silent><F2> :PREVCOLOR<cr>

"Block F1 because of weird putty issue
map <F1> <NOP>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Look and feel
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
colo fruity

"Specific theming for running under gui
if has("gui_running")
    highlight SpellBad term=underline gui=undercurl guisp=Orange
    if has("win32")
        :set guifont=consolas
    else
        :set guifont="Andale Mono" 10
    endif
endif

set colorcolumn=99

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" File specific auto commands
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Use tabs in makefiles
autocmd FileType make setlocal noexpandtab

"Enable deleting of useless whitespace on python
autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
autocmd BufWritePre *.cpp normal m`:%s/\s\+$//e ``
autocmd BufWritePre *.hpp normal m`:%s/\s\+$//e ``
autocmd BufWritePre *.h normal m`:%s/\s\+$//e ``
autocmd BufWritePre *.rst normal m`:%s/\s\+$//e ``

"Disable spellcheck in erlang
autocmd FileType erlang setlocal nospell

"Prevent using " on python
autocmd FileType python imap <buffer> <nowait> " '
autocmd FileType python inoremap <buffer> <nowait> \" "

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Trim Spaces
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Highlight trailing space in files
highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/

"Function to specifically show trailing space
function! ShowSpaces(...)
    let @/='\v(\s+$)|( +\ze\t)'
    let oldhlsearch=&hlsearch
    if !a:0
        let &hlsearch=!&hlsearch
    else
        let &hlsearch=a:1
    end
    return oldhlsearch
endfunction

"Function to actually trim space
function! TrimSpaces() range
    let oldhlsearch=ShowSpaces(1)
    execute a:firstline.",".a:lastline."substitute ///gec"
    let &hlsearch=oldhlsearch
endfunction

command!  -bar -nargs=? ShowSpaces call ShowSpaces(<args>)
command!  -bar -nargs=0 -range=% TrimSpaces <line1>,<line2>call TrimSpaces()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Python Mode
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:pymode_folding = 0
let g:pymode_rope_guess_project = 0
let g:pymode_rope = 0

" Prefer line length of 99
let g:pymode_options_max_line_length = 99

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" VirtualEnv
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set secure
if exists("$VIRTUAL_ENV")
    let virtualenv_vimrc = $VIRTUAL_ENV . "/.vimrc"
    if filereadable(virtualenv_vimrc)
        exec ":source " . virtualenv_vimrc
    else
        unlet virtualenv_vimrc
    endif
endif


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Allow editing using relative to buffer path in commands
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! SetBufDirectory()
    let l:path = expand("%")
    if isdirectory(l:path)
        let b:rel_directory = fnamemodify(l:path, ":.")
    else
        let b:rel_directory = fnamemodify(l:path, ":.:h")
    endif
    exe "cmap %/ ".b:rel_directory."/"
endfunction

autocmd BufEnter * call SetBufDirectory()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RST
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType rst :setlocal spell

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Powerline
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has("python")
    python from powerline.vim import setup as powerline_setup
    python powerline_setup()
    python del powerline_setup
endif

if has("python3")
    python3 from powerline.vim import setup as powerline_setup
    python3 powerline_setup()
    python3 del powerline_setup
endif
set laststatus=2

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Recognise modeline
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set modeline

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UltiSnips
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:UltiSnipsExpandTrigger="<s-tab>"
let g:UltiSnipsJumpForwardTrigger="<s-tab>"
let g:UltiSnipsJumpBackwardTrigger="<tab>"


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Ctags
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Search recursively for tags
set tags=tags;/


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" localvimrc
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:localvimrc_persistent=1


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" detect file changes inbackground
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd CursorHold * call Timer()
function! Timer()
    call feedkeys("f\e")
    checktime
endfunction
set updatetime=5000  " milliseconds
